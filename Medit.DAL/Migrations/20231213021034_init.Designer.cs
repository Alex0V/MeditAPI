// <auto-generated />
using System;
using Medit.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Medit.DAL.Migrations
{
    [DbContext(typeof(MeditDBContext))]
    [Migration("20231213021034_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Medit.DAL.Entities.CompletedSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("CompletedSessions");
                });

            modelBuilder.Entity("Medit.DAL.Entities.Meditation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S3UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meditations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 39, DateTimeKind.Local).AddTicks(3840),
                            Description = "Focuses on being present in the moment and non-judgmentally observing your thoughts and surroundings.",
                            Duration = "10-30 minutes",
                            FotoKey = "mindfulness-meditation.jpg",
                            Name = "Mindfulness Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/mindfulness-meditation.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3613),
                            Description = "Uses a mantra to help quiet the mind and achieve a deep state of relaxation.",
                            Duration = "10-30 minutes",
                            FotoKey = "transcendental-meditation.jpg",
                            Name = "Transcendental Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/transcendental-meditation.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3675),
                            Description = "Involves generating feelings of love and compassion towards oneself and others.",
                            Duration = "10-30 minutes",
                            FotoKey = "loving-kindness-meditation.jpg",
                            Name = "Loving-Kindness Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/loving-kindness-meditation.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3683),
                            Description = "Involves systematically bringing attention to different parts of the body, noticing sensations and relaxing tension.",
                            Duration = "10-30 minutes",
                            FotoKey = "body-scan-meditation.jpg",
                            Name = "Body Scan Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/body-scan-meditation.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3686),
                            Description = "Involves observing the breath and bodily sensations to gain insight into the nature of reality.",
                            Duration = "30-60 minutes",
                            FotoKey = "vipassana-meditation.jpg",
                            Name = "Vipassana Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/vipassana-meditation.jpg"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3702),
                            Description = "Involves sitting in silence and focusing on the breath, often with the support of a teacher or group.",
                            Duration = "20-40 minutes",
                            FotoKey = "zen-meditation.jpg",
                            Name = "Zen Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/zen-meditation.jpg"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3706),
                            Description = "Involves focusing on each of the body's energy centers to balance and align them.",
                            Duration = "10-30 minutes",
                            FotoKey = "chakra-meditation.jpg",
                            Name = "Chakra Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/chakra-meditation.jpg"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3710),
                            Description = "Involves repeating a word or phrase to focus the mind and achieve a calm state.",
                            Duration = "10-30 minutes",
                            FotoKey = "mantra-meditation.jpg",
                            Name = "Mantra Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/mantra-meditation.jpg"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3714),
                            Description = "Involves counting each breath to maintain focus and concentration.",
                            Duration = "10-30 minutes",
                            FotoKey = "breath-counting-meditation.jpg",
                            Name = "Breath Counting Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/breath-counting-meditation.jpg"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3720),
                            Description = "Involves walking slowly and mindfully, focusing on each step and the sensations in the body.",
                            Duration = "10-30 minutes",
                            FotoKey = "walking-meditation.jpg",
                            Name = "Walking Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/walking-meditation.jpg"
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3723),
                            Description = "Involves creating a mental image or scenario to promote relaxation and positive emotions.",
                            Duration = "10-30 minutes",
                            FotoKey = "visualization-meditation.jpg",
                            Name = "Visualization Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3726),
                            Description = "Involves lying down and systematically relaxing different parts of the body to achieve a deep state of relaxation.",
                            Duration = "20-40 minutes",
                            FotoKey = "yoga-nidra-meditation.jpg",
                            Name = "Yoga Nidra Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/yoga-nidra-meditation.jpg"
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3730),
                            Description = "Involves focusing on a particular sound or a series of sounds to promote relaxation.",
                            Duration = "10-30 minutes",
                            FotoKey = "sound-meditation.jpg",
                            Name = "Sound Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/sound-meditation.jpg"
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3734),
                            Description = "Involves combining movement, breath, and visualization to improve physical and mental health.",
                            Duration = "10-30 minutes",
                            FotoKey = "qi-gong-meditation.jpg",
                            Name = "Qi Gong Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/qi-gong-meditation.jpg"
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3737),
                            Description = "Involves combining breathwork, movement, and mantra to awaken the energy at the base of the spine and raise it up through the chakras.",
                            Duration = "10-30 minutes",
                            FotoKey = "kundalini-meditation.jpg",
                            Name = "Kundalini Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/kundalini-meditation.jpg"
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3741),
                            Description = "Involves sitting in silence and observing the mind without judgment.",
                            Duration = "10-60 minutes",
                            FotoKey = "silent-meditation.jpeg",
                            Name = "Silent Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/silent-meditation.jpeg"
                        },
                        new
                        {
                            Id = 17,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3744),
                            Description = "Involves focusing on a specific object or sound to maintain concentration and develop awareness.",
                            Duration = "10-30 minutes",
                            FotoKey = "open-monitoring-meditation.jpg",
                            Name = "Open Monitoring Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/open-monitoring-meditation.jpg"
                        },
                        new
                        {
                            Id = 18,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3860),
                            Description = "Involves focusing on a specific object or sound to maintain concentration and develop awareness.",
                            Duration = "10-30 minutes",
                            FotoKey = "focused-attention-meditation.jpg",
                            Name = "Focused Attention Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/focused-attention-meditation.jpg"
                        },
                        new
                        {
                            Id = 19,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3865),
                            Description = "Involves cultivating feelings of loving-kindness and compassion towards oneself and others.",
                            Duration = "10-30 minutes",
                            FotoKey = "metta-meditation.jpg",
                            Name = "Metta Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/metta-meditation.jpg"
                        },
                        new
                        {
                            Id = 20,
                            CreationDate = new DateTime(2023, 12, 13, 4, 10, 33, 43, DateTimeKind.Local).AddTicks(3868),
                            Description = "Involves focusing on the sensations in the body to develop awareness and relaxation.",
                            Duration = "10-30 minutes",
                            FotoKey = "body-awareness-meditation.jpg",
                            Name = "Body Awareness Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/body-awareness-meditation.jpg"
                        });
                });

            modelBuilder.Entity("Medit.DAL.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AudioKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeditationId")
                        .HasColumnType("int");

                    b.Property<string>("S3UrlAudio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MeditationId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AudioKey = "Dreamy Breeze.mp3",
                            MeditationId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Dreamy+Breeze.mp3",
                            SessionName = "Dreamy Breeze"
                        },
                        new
                        {
                            Id = 2,
                            AudioKey = "Peace of the Lake.mp3",
                            MeditationId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Peace+of+the+Lake.mp3",
                            SessionName = "Peace of the Lake"
                        },
                        new
                        {
                            Id = 3,
                            AudioKey = "Silent Symphony.mp3",
                            MeditationId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Silent+Symphony.mp3",
                            SessionName = "Silent Symphony"
                        },
                        new
                        {
                            Id = 4,
                            AudioKey = "Calm Waters.mp3",
                            MeditationId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Calm+Waters.mp3",
                            SessionName = "Calm Waters"
                        },
                        new
                        {
                            Id = 5,
                            AudioKey = "Deep Equilibrium.mp3",
                            MeditationId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Deep+Equilibrium.mp3",
                            SessionName = "Deep Equilibrium"
                        },
                        new
                        {
                            Id = 6,
                            AudioKey = "Transcendental Tranquility.mp3",
                            MeditationId = 2,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Transcendental+Tranquility.mp3",
                            SessionName = "Transcendental Tranquility"
                        },
                        new
                        {
                            Id = 7,
                            AudioKey = "Path to Inner Peace.mp3",
                            MeditationId = 2,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Path+to+Inner+Peace.mp3",
                            SessionName = "Path to Inner Peace"
                        },
                        new
                        {
                            Id = 8,
                            AudioKey = "Conscious Immersion.mp3",
                            MeditationId = 2,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Conscious+Immersion.mp3",
                            SessionName = "Conscious Immersion"
                        },
                        new
                        {
                            Id = 9,
                            AudioKey = "Kindness Unfolding Practice.mp3",
                            MeditationId = 3,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Kindness+Unfolding+Practice.mp3",
                            SessionName = "Kindness Unfolding Practice"
                        },
                        new
                        {
                            Id = 10,
                            AudioKey = "Radiant Love Meditation.mp3",
                            MeditationId = 3,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Radiant+Love+Meditation.mp3",
                            SessionName = "Radiant Love Meditation"
                        },
                        new
                        {
                            Id = 11,
                            AudioKey = "Meditation of Compassionate Hearts.mp3",
                            MeditationId = 3,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Meditation+of+Compassionate+Hearts.mp3",
                            SessionName = "Meditation of Compassionate Hearts"
                        },
                        new
                        {
                            Id = 12,
                            AudioKey = "Mindful Body Unveiling.mp3",
                            MeditationId = 4,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Mindful+Body+Unveiling.mp3",
                            SessionName = "Mindful Body Unveiling"
                        },
                        new
                        {
                            Id = 13,
                            AudioKey = "Somatic Awareness Practice.mp3",
                            MeditationId = 4,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Somatic+Awareness+Practice.mp3",
                            SessionName = "Somatic Awareness Practice"
                        },
                        new
                        {
                            Id = 14,
                            AudioKey = "Sensory Body Exploration.mp3",
                            MeditationId = 4,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Sensory+Body+Exploration.mp3",
                            SessionName = "Sensory Body Exploration"
                        },
                        new
                        {
                            Id = 15,
                            AudioKey = "Insightful Mindfulness Practice.mp3",
                            MeditationId = 5,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Insightful+Mindfulness+Practice.mp3",
                            SessionName = "Insightful Mindfulness Practice"
                        });
                });

            modelBuilder.Entity("Medit.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResetPasswordExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Medit.DAL.Entities.CompletedSession", b =>
                {
                    b.HasOne("Medit.DAL.Entities.Session", "Sessions")
                        .WithMany("CompletedSessions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Medit.DAL.Entities.User", "User")
                        .WithMany("СompletedSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sessions");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Medit.DAL.Entities.Session", b =>
                {
                    b.HasOne("Medit.DAL.Entities.Meditation", "Meditation")
                        .WithMany("Sessions")
                        .HasForeignKey("MeditationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meditation");
                });

            modelBuilder.Entity("Medit.DAL.Entities.Meditation", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Medit.DAL.Entities.Session", b =>
                {
                    b.Navigation("CompletedSessions");
                });

            modelBuilder.Entity("Medit.DAL.Entities.User", b =>
                {
                    b.Navigation("СompletedSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
